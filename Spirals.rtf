{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red109\green109\blue109;\red254\green187\blue91;\red117\green114\blue185;\red86\green132\blue173;\red88\green118\blue71;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c45882\c44706\c72549;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c34510\c46275\c27843;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 import \cf4 turtle\
\cf2 import \cf4 time\
\cf2 import \cf4 random\
\cf5 #import matplotlib.pylot as plt\
# N sided polygon\
\cf4 turtle1 = turtle.Turtle()\
\
\
\cf2 def \cf6 drawNgon\cf4 (myTurtle\cf2 , \cf4 numSides\cf2 , \cf4 sideLength):\
    \cf5 #myTurtle = turtle.Turtle()\
    \cf2 for \cf4 i \cf2 in \cf7 range\cf4 (numSides):\
        myTurtle.forward(sideLength)\
        myTurtle.right(\cf8 360\cf4 /numSides)\
\
\cf2 def \cf6 drawNgonSpiral\cf4 (myTurtle\cf2 , \cf4 numSides\cf2 , \cf4 sideLength\cf2 , \cf4 numShapes):\
    \cf2 for \cf4 i \cf2 in \cf7 range\cf4 (numShapes):\
        myTurtle.speed(\cf8 10\cf4 )\
        drawNgon(myTurtle\cf2 , \cf4 numSides\cf2 , \cf4 sideLength)\
        myTurtle.right(\cf8 720\cf4 /numShapes)\
\
\
\
\cf2 def \cf6 drawNgonSuperduperSpiral\cf4 (myTurtle\cf2 , \cf4 numSides\cf2 , \cf4 sideLength\cf2 , \cf4 numShapes):\
    \cf2 for \cf4 i \cf2 in \cf7 range\cf4 (numShapes):\
        \cf2 if \cf4 i < \cf7 int\cf4 (numShapes/\cf8 3\cf4 ):\
            myTurtle.color(\cf9 "blue"\cf4 )\
        \cf2 elif \cf4 i > \cf7 int\cf4 (numShapes/\cf8 3\cf4 ) \cf2 and \cf4 i < \cf7 int\cf4 (numShapes * \cf8 2\cf4 /\cf8 3\cf4 ):\
            myTurtle.color(\cf9 "Magenta"\cf4 )\
        \cf2 elif \cf4 i > \cf7 int\cf4 ((numShapes/\cf8 3 \cf4 * \cf8 2\cf4 /\cf8 3\cf4 ) + \cf8 1\cf4 ):\
            myTurtle.color(\cf9 "DarkMagenta"\cf4 )\
        \cf2 for \cf4 j \cf2 in \cf7 range\cf4 (numSides):\
            myTurtle.forward(sideLength)\
            myTurtle.right(\cf8 360\cf4 /numSides)\
        myTurtle.right(\cf8 720\cf4 /numShapes)\
\
        \cf5 #myTurtle.color("red")\
\
\
\
    \cf9 '''\
    #print(primaryColor, " before for loop")\
    #myTurtle.speed(70)\
    for i in range(1, numberOfColors+1):\
        if i % 2 != 0:\
            colors = ["blue", "purple", "red"]\
            primaryColor1 = random.choice(colors)\
            print(primaryColor1)\
            myTurtle.color(primaryColor1)\
            colors.remove(primaryColor1)\
            print(colors)\
            drawNgonSpiral(myTurtle, numSides, sideLength, numShapes)\
        else:\
             print(colors)\
             primaryColor2 = random.choice(colors)\
             print(primaryColor2)\
             myTurtle.color(primaryColor2)\
             drawNgonSpiral(myTurtle, numSides, sideLength, numShapes - (int(numShapes/2)))\
    '''\
\
\
\
\cf5 #drawNgonSpiral(turtle1, 6, 100, 35)\
\cf4 wn = turtle1.getscreen()\
wn.bgcolor(\cf9 "white"\cf4 )\
turtle1.speed(\cf8 10\cf4 )\
drawNgonSuperduperSpiral(turtle1\cf2 , \cf8 6\cf2 , \cf8 150\cf2 , \cf8 35\cf4 )\
time.sleep(\cf8 20\cf4 )\
\
\cf5 #def main():\
    #turtle1 = turtle.Turtle()\
    #drawNgonSpiral(turtle1, 6, 100, 35)\
    #time.sleep(10)\
\
#main()\
}